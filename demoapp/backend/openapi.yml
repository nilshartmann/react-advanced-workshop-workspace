openapi: 3.0.0
info:
  title: Task Management API
  description: API for managing tasks, insights, and related resources.
  version: 1.0.0
servers:
  - url: http://localhost:3002/api
    description: Local server

paths:
  /tasks:
    get:
      summary: Get a list of tasks
      description: Retrieve a list of tasks, optionally sorted by state, votes, or due date.
      parameters:
        - name: orderBy
          in: query
          description: Sort tasks by `state`, `votes`, or `dueDate`.
          required: false
          schema:
            type: string
            enum: [state, votes, dueDate]
        - name: count
          in: query
          description: Add a counter to the task title to simulate modified titles.
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: A list of tasks.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    description:
                      type: string
                    effort:
                      type: integer
                    state:
                      type: string
                      enum: [new, in_progress, done]
                    votes:
                      type: integer
                    dueDate:
                      type: string
                      format: date

  /tasks/{taskId}:
    get:
      summary: Get a task by ID
      description: Retrieve detailed information about a specific task.
      parameters:
        - name: taskId
          in: path
          required: true
          description: The ID of the task.
          schema:
            type: string
      responses:
        "200":
          description: The requested task.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  effort:
                    type: integer
                  state:
                    type: string
                    enum: [new, in_progress, done]
                  votes:
                    type: integer
                  dueDate:
                    type: string
                    format: date
        "404":
          description: Task not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /tasks/{taskId}/votes:
    patch:
      summary: Vote for a task
      description: Increment the vote count for a specific task.
      parameters:
        - name: taskId
          in: path
          required: true
          description: The ID of the task to vote for.
          schema:
            type: string
      responses:
        "200":
          description: The updated vote count for the task.
          content:
            application/json:
              schema:
                type: object
                properties:
                  newVotes:
                    type: integer
        "404":
          description: Task not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /tasks/{taskId}/insights:
    get:
      summary: Get insights for a task
      description: Retrieve insights related to a specific task.
      parameters:
        - name: taskId
          in: path
          required: true
          description: The ID of the task.
          schema:
            type: string
      responses:
        "200":
          description: A list of insights for the task.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    author:
                      type: string
                    text:
                      type: string
                    confidence:
                      type: integer
        "404":
          description: Task not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      summary: Create a new insight
      description: Add a new insight for a specific task.
      parameters:
        - name: taskId
          in: path
          required: true
          description: The ID of the task.
          schema:
            type: string
      requestBody:
        description: The new insight data.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                author:
                  type: string
                text:
                  type: string
                confidence:
                  type: integer
              required:
                - author
                - text
                - confidence
      responses:
        "201":
          description: The created insight.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  author:
                    type: string
                  text:
                    type: string
                  confidence:
                    type: integer
        "400":
          description: Invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /tasks/{taskId}/resources:
    get:
      summary: Get resources for a task
      description: Retrieve related resources for a specific task.
      parameters:
        - name: taskId
          in: path
          required: true
          description: The ID of the task.
          schema:
            type: string
      responses:
        "200":
          description: A list of resources for the task.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    description:
                      type: string
                    url:
                      type: string
        "404":
          description: Resources not found for the task.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
